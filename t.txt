Проведите аудит безопасности вашего приложения и исправьте уязвимости. В нем
должны быть разделы, посвященные уязвимостям XSS, Information Disclosure, SQL
Injection, CSRF, Include, Upload. В отчете укажите по каждой уязвимости
примененные методы защиты с примерами вашего кода.


1. Введение
    В ходе аудита безопасности приложения были выявлены и устранены уязвимости, включая XSS, Information Disclosure, SQL Injection, CSRF, Include и Upload. В отчете описаны методы защиты и приведены примеры исправленного кода.
2. Уязвимости и методы защиты
2.1. Межсайтовый скриптинг (XSS)
    Уязвимость: возможность внедрения вредоносного JavaScript-кода через пользовательский ввод.
Защита: валидация пользовательского ввода. 


2.2. Раскрытие информации (Information Disclosure)
    Уязвимость: утечка данных через сообщения об ошибках.
Защита: вынести чувствительную информацию выше корневой директории сервера. 
2.3. SQL-инъекции (SQL Injection)
Уязвимость: возможность выполнения произвольных SQL-запросов.
Защита: использование подготовленных запросов.
2.4. Межсайтовая подделка запроса (CSRF)
    Уязвимость: Выполнение действий от имени пользователя без его ведома.
Защита: Использование CSRF-токенов.
2.5. Включение и загрузка файлов (Include/Upload Inclusion)
    Include/File Inclusion — это уязвимость, которая позволяет злоумышленнику включать произвольные файлы (локальные или удаленные) в код веб-приложения.
Уязвимость: чтение конфиденциальных файлов и выполнение вредоносного кода.
Защита: разрешать только определенные файлы.

    File Upload — это функционал, позволяющий пользователям загружать файлы на сервер.
Уязвимость: загрузить вредоносный скрипт (например, .php, .js) и выполнить его на сервере, заполнить диск (атака через загрузку огромных файлов).
Защита: 
генерация случайного имени файла (для избежания перезаписи и обхода проверок).
ограничение размера файла.
отключение выполнения скриптов в папке загрузок.
